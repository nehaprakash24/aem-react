import PropTypes from 'prop-types';
import { Component } from 'react';
import { PlaceHolderModel } from '../ContainerPlaceholder';
import { AllowedComponent } from './AllowedComponentsContainer';
export interface AllowedComponentPlaceholderListProperties {
    title: string;
    emptyLabel: string;
    components: AllowedComponent[];
    placeholderProps: PlaceHolderModel;
    cqPath: string;
}
/**
 * List of placeholder of the Allowed Component Container component.
 *
 * @class
 * @extends React.Component
 * @private
 */
export declare class AllowedComponentPlaceholderList<P extends AllowedComponentPlaceholderListProperties, S> extends Component<P, S> {
    static get propTypes(): {
        components: PropTypes.Requireable<(PropTypes.InferProps<{
            path: PropTypes.Requireable<string>;
            title: PropTypes.Requireable<string>;
        }> | null | undefined)[]>;
        cqPath: PropTypes.Requireable<string>;
        emptyLabel: PropTypes.Requireable<string>;
        placeholderClassNames: PropTypes.Requireable<string>;
        title: PropTypes.Requireable<string>;
    };
    render(): JSX.Element;
}
//# sourceMappingURL=AllowedComponentsPlaceholderList.d.ts.map