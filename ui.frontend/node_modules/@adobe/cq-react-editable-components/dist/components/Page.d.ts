/// <reference types="react" />
import { Model } from '@adobe/cq-spa-page-model-manager';
import { Container, ContainerProperties, ContainerState } from './Container';
export interface PageModel extends Model {
    ':type': string;
    'id': string;
    ':path': string;
    ':children'?: {
        [key: string]: PageModel;
    };
}
export interface PageProperties extends ContainerProperties {
    cqChildren: {
        [key: string]: PageModel;
    };
}
/**
 * The container for a Page.
 * In editing we need to force that this doesn't render a placeholder.
 * It should add data-cq-page-path instead fo data-cq-data-path.
 */
export declare class Page<P extends PageProperties, S extends ContainerState> extends Container<P, S> {
    static defaultProps: {
        cqChildren: {};
        cqItems: {};
        cqItemsOrder: never[];
        cqPath: string;
    };
    constructor(props: P);
    /**
     * The attributes that will be injected in the root element of the container
     *
     * @returns {Object} - the attributes of the container
     */
    get containerProps(): {
        [key: string]: string;
    };
    /**
     * Returns the child pages of a page
     *
     * @return {Array}
     */
    get childPages(): JSX.Element[];
    /**
     * Computes the path of the current item.
     *
     * @param {String} itemKey - the key of the item
     * @returns {String} - the computed path
     */
    getItemPath(itemKey: string): string;
    render(): JSX.Element;
}
//# sourceMappingURL=Page.d.ts.map